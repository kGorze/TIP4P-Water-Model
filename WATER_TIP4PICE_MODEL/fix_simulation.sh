#!/bin/bash
# Script to fix the TIP4P/Ice water simulation issues
# This script will:
# 1. Convert the water_box.pdb file to water_box.gro format
# 2. Create the topology file (topol.top)
# 3. Run the energy minimization step

set -e  # Exit on error

echo "Starting simulation fix script..."
echo "=================================="

# Define directories
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
DATA_DIR="${SCRIPT_DIR}/data"
CONFIGS_DIR="${SCRIPT_DIR}/configs"

# Set GMXLIB to include the current directory for force field searching
export GMXLIB="${SCRIPT_DIR}"

cd "${DATA_DIR}"

echo "1. Converting water_box.pdb to water_box.gro format..."
if [ -f water_box.pdb ]; then
    # Use a much larger box size (15 nm) to avoid overlaps during energy minimization
    gmx editconf -f water_box.pdb -o water_box.gro -box 15 15 15 -center 7.5 7.5 7.5 || { echo "Failed to convert PDB to GRO"; exit 1; }
    echo "   Conversion successful."
else
    echo "   Error: water_box.pdb not found!"
    exit 1
fi

echo "2. Creating topology file (topol.top)..."
# Count the number of water molecules in the water_box.pdb file
echo "   Counting water molecules in water_box.pdb..."
water_count=$(grep -c "OW  SOL" water_box.pdb || echo 5500)
if [ -z "$water_count" ] || [ "$water_count" -eq 0 ]; then
    echo "   Could not count water molecules, using default value of 5500"
    water_count=5500
fi
echo "   Found ${water_count} water molecules"

# Create the topology file
cat > topol.top << EOF
; TIP4P/Ice water topology
; Generated by fix_simulation.sh

; Include force field parameters
#define _FF_OPLS
#define _FF_OPLSAA

[ defaults ]
; nbfunc        comb-rule       gen-pairs       fudgeLJ fudgeQQ
1               3               yes             0.5     0.5

; Include the local force field files
#include "./ffnonbonded.itp"
#include "./ffbonded.itp"

; Include TIP4P/Ice water model parameters
[ atomtypes ]
; name     mass      charge   ptype    sigma        epsilon
IW     0             0.000       D   0.0           0.0
OWT4   15.99940      0.000       A   0.31668       0.88211
HW     1.00800       0.000       A   0.00000E+00   0.00000E+00

[ moleculetype ]
; name nrexcl
SOL  1

[ atoms ]
; nr type   resnr  residu atom  cgnr  charge   mass
1     OWT4  1      SOL    OW    1     0        15.9994
2     HW    1      SOL    HW1   1     0.5897   1.008
3     HW    1      SOL    HW2   1     0.5897   1.008
4     IW    1      SOL    MW    1    -1.1794   0.0

[ constraints ]
; i   j   funct   length
1       2       1       0.09572
1       3       1       0.09572
2       3       1       0.15139

[ exclusions ]
1       2       3       4
2       1       3       4
3       1       2       4
4       1       2       3

[ dummies3 ]
; Dummy from    funct   a         b
4       1       2       3       1       0.13458   0.13458

[ system ]
TIP4P/Ice Water System

[ molecules ]
; Compound        nmols
SOL               ${water_count}
EOF

echo "   Topology file created."
echo "   Verifying topology:"
grep -A 5 "\[ system \]" topol.top
grep -A 2 "\[ molecules \]" topol.top

echo "3. Running energy minimization with improved parameters..."
# Create an improved em.mdp file with PME electrostatics
cat > em_improved.mdp << 'EOF'
; Energy minimization parameters for water box (TIP4P/Ice model)

; Run parameters
integrator               = steep     ; Steepest descent energy minimization
emtol                    = 1000.0    ; Stop when max force < 1000 kJ/mol/nm
emstep                   = 0.00001   ; Very small initial step-size for extremely gentle minimization
nsteps                   = 100000    ; Maximum number of steps
nstxout                  = 500       ; Write coordinates every 500 steps

; Neighbor searching
cutoff-scheme           = Verlet    ; Neighbor search method
nstlist                 = 20        ; Update neighbor list frequency
ns_type                 = grid      ; Method to determine neighbor list
pbc                     = xyz       ; Periodic Boundary Condition in all directions
rlist                   = 1.0       ; Cut-off distance for the short-range neighbor list

; Electrostatics
coulombtype             = PME       ; Particle Mesh Ewald for long-range electrostatics
rcoulomb                = 1.0       ; Short-range electrostatic cut-off (nm)
pme_order               = 4         ; Cubic interpolation
fourierspacing          = 0.16      ; Grid spacing for FFT

; VdW
vdwtype                 = Cut-off
rvdw                    = 1.0       ; Short-range van der Waals cut-off (nm)
DispCorr                = EnerPres  ; Apply long range dispersion corrections

; Temperature and Pressure
tcoupl                  = no        ; No temperature coupling during minimization
pcoupl                  = no        ; No pressure coupling during minimization

; Constraints - turning off constraints for minimization
constraints             = none      ; No constraints during minimization to allow adjustments in bond lengths
constraint_algorithm    = Lincs     ; Will use LINCS after minimization

; COM motion removal
comm-mode               = Linear    ; Remove center of mass translation
nstcomm                 = 100       ; Frequency for center of mass motion removal
EOF

# Run grompp with increased warning tolerance
echo "   Running grompp for energy minimization..."
gmx grompp -f em_improved.mdp -c water_box.gro -p topol.top -o em.tpr -maxwarn 10 || { echo "   grompp for em failed"; exit 1; }

# Run mdrun with appropriate parallelization
echo "   Running energy minimization..."
gmx mdrun -v -deffnm em -ntmpi 1 -ntomp 6 || { echo "   mdrun for em failed"; exit 1; }

echo "   Energy minimization completed."

echo "4. Running NVT equilibration with improved parameters..."
# Create an improved nvt.mdp file with PME electrostatics
cat > nvt_improved.mdp << 'EOF'
; NVT equilibration parameters for TIP4P/Ice water at 273K
integrator               = md        ; leap-frog integrator
nsteps                   = 50000     ; 25 ps with 0.5 fs timestep
dt                       = 0.0005    ; 0.5 fs - very small timestep for stability
nstxout                  = 5000      ; save coordinates every 2.5 ps
nstvout                  = 5000      ; save velocities every 2.5 ps
nstenergy                = 5000      ; save energies every 2.5 ps
nstlog                   = 5000      ; update log file every 2.5 ps

; Bond parameters
continuation             = no        ; first dynamics run
constraint_algorithm     = lincs     ; holonomic constraints 
constraints              = h-bonds   ; constrain bonds with H atoms
lincs_iter               = 4         ; increased accuracy of LINCS
lincs_order              = 8         ; increased accuracy

; Neighbor searching
cutoff-scheme           = Verlet    ; Verlet cutoff scheme (efficient on modern hardware)
ns_type                 = grid      ; search neighboring grid cells
nstlist                 = 20        ; update neighbor list every 20 steps
rcoulomb                = 1.0       ; short-range electrostatic cutoff (in nm)
rvdw                    = 1.0       ; short-range van der Waals cutoff (in nm)

; Electrostatics
coulombtype             = PME       ; Particle Mesh Ewald for long-range electrostatics
pme_order               = 4         ; cubic interpolation
fourierspacing          = 0.16      ; grid spacing for FFT

; Temperature coupling
tcoupl                  = V-rescale ; velocity rescaling thermostat (more accurate than Berendsen)
tc-grps                 = System    ; couple entire system as one group
tau_t                   = 1.0       ; longer time constant for gentler coupling
ref_t                   = 273       ; reference temperature 273K (0Â°C)

; Pressure coupling
pcoupl                  = no        ; no pressure coupling in NVT

; Periodic boundary conditions
pbc                     = xyz       ; 3-D PBC

; Dispersion correction
DispCorr                = EnerPres  ; account for cut-off vdW scheme (improves energy and pressure accuracy)

; Velocity generation
gen_vel                 = yes       ; assign velocities from Maxwell distribution
gen_temp                = 100       ; lower temperature for initial velocities
gen_seed                = -1        ; generate a random seed
EOF

# Run grompp with increased warning tolerance
echo "   Running grompp for NVT equilibration..."
gmx grompp -f nvt_improved.mdp -c em.gro -r em.gro -p topol.top -o nvt.tpr -maxwarn 10 || { echo "   grompp for nvt failed"; exit 1; }

# Run mdrun with appropriate parallelization
echo "   Running NVT equilibration..."
gmx mdrun -v -deffnm nvt -ntmpi 1 -ntomp 6 || { echo "   mdrun for nvt failed"; exit 1; }

echo "   NVT equilibration completed."

echo "=================================="
echo "Simulation fix completed successfully!"
echo "You can now continue with the rest of the workflow." 